// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Class {
  id   String        @id @default(uuid())

  name Users[]
  Task Task[]
}

model Users {
  id                  String                @id
  // name                String //remove
  email               String?
  classId             String
  role                String                 @default("STUDENT")
  linkedIn            String?
  github              String?
  leetcode            String?
  lastBackupTime      DateTime              @default(now())

  solves              Problem[]
  class               Class          @relation(fields: [classId], references: [id])
  User_Problem  User_Problem[]
  Task                Task[]
}

model Problem {
  id                   String                 @id @default(uuid())
  name                 String
  platform             String                 @default("Leetcode")
  // description          String
  difficulty           Difficulty

  topics               Topic[]
  solved               Users []
  Topic_Problem  Topic_Problem []
  User_Problem   User_Problem []
}

model User_Problem  {
  timestamp DateTime       @default(now())
  problemId String
  userId    String

  problem   Problem  @relation(fields: [problemId], references: [id])
  user      Users     @relation(fields: [userId], references: [id])
  @@id([problemId, userId])
}

model Topic  {
  id                   String                 @id @default(uuid())

  name                 Problem []
  Topic_Problem  Topic_Problem []
}

model Topic_Problem  {
  topicId   String
  problemId String

  topic     Topic    @relation(fields: [topicId], references: [id])
  problem   Problem  @relation(fields: [problemId], references: [id])
  @@id([topicId, problemId])
}

model Task {
  id         String       @id @default(uuid())
  classId    String
  count      Int
  assignedBy String
  timestamp  DateTime     @default(now())

  assignee   Users   @relation(fields: [assignedBy], references: [id])
  class      Class  @relation(fields: [id], references: [id])
}

// enum Roles {
//   STUDENT
//   PLACEMENT_REPRESENTATIVE
//   TUTOR
//   COURSE_COORDINATOR
// }

enum Difficulty {
  EASY
  MEDIUM
  HARD
  EXPERT
}
